{"version":3,"sources":["components/ListingBook/index.js","components/EmptyState/index.js","components/DisplaySelection/index.js","components/FilterMenu/index.js","components/PageLimitSelect/index.js","containers/GoodRead/index.js","components/LanguageSelection/index.js","App.js","serviceWorker.js","i18n.js","index.js","App.module.css","containers/GoodRead/GoodRead.module.css","components/ListingBook/ListingBook.module.css"],"names":["ListingBook","data","loading","hasSubject","hasImage","displayGrid","t","useTranslation","theme","useTheme","screenSM","useMediaQuery","breakpoints","up","Grid","container","spacing","alignContent","Array","from","map","a","index","item","md","key","alignItems","className","style","listConteinerGrid","listContainer","padding","xs","sm","Skeleton","animation","variant","height","width","marginBottom","book","isbn","coverImg","src","undefined","process","onError","e","target","alt","title","Box","p","author_name","subject","first_publish_year","language","length","EmptyState","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","DisplaySelection","setSelectedDisplay","useState","displayView","setDisplayView","onHandleSelection","event","value","useEffect","node","loadCSS","document","querySelector","parentNode","removeChild","RadioGroup","row","aria-label","name","defaultValue","Radio","icon","Icon","checkedIcon","color","onChange","inputProps","checked","FilterMenu","selectBookFilter","onChangeBookFilter","FormControl","InputLabel","id","TextField","select","label","MenuItem","selected","disabled","CustomizedSelect","withStyles","createStyles","input","borderRadius","position","backgroundColor","borderBottom","borderColor","InputBase","PageLimitSelect","setSearchLimitPage","searchLimitPage","Select","GoodRead","locationInput","searchLimit","userLimitSearch","setLoading","searchDestination","setSearchDestination","totalSearch","setTotalSearch","displayData","setDisplayData","destination","setDestination","offset","setOffset","page","setPage","totalPage","setTotalPage","setSelectBookFilter","selectedDisplay","startItensByPage","endItensByPage","getBooks","location","city","split","join","toLowerCase","country","axios","method","url","crossdomain","then","response","docs","numFound","Math","ceil","catch","error","coordinates","isNumber","parseInt","get","address","main","justify","headResults","classes","root","justifyGrid","mr","Hidden","xsDown","wrapPagination","Pagination","count","handlePagination","pagination","LanguadeSelection","i18n","languageSelect","setLanguageSelect","labelId","changeLanguage","App","userInput","setUserInput","setLocation","Container","mainContainer","py3","logo","forTravel","inputField","IconButton","onClick","formControl","Boolean","window","hostname","match","use","LanguageDetector","initReactI18next","init","resources","en","translation","result_label","book_title_label","published_in","label_in","languages_label","subject_label","filter_label","filter_travel","filter_novel","filter_culture","label_english","label_french","label_portuguese","itensPage_label","itensPage_10","itensPage_20","itensPage_30","itensPage_40","page_range_itens_of","page_range_books","pt","fr","lng","fallbackLng","interpolation","escapeValue","createMuiTheme","ReactDOM","render","StrictMode","fallback","ThemeProvider","CssBaseline","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.0f4d6107.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useTheme,\n} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport style from \"./ListingBook.module.css\";\nimport { Box } from \"@material-ui/core\";\n\n\n/** ListingBook component, presentational component \n * to show the search result as a list\n * usage of loading skeleton  \n * @param {array} data information \n * @param {boolean} loading \n * @param {boolean} hasSubject  \n * @param {boolean} hasImage \n * @param {boolean} displayGrid \n */\nconst ListingBook = ({\n  data,\n  loading,\n  hasSubject = true,\n  hasImage = true,\n  displayGrid,\n}) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const screenSM = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  /**\n   *  Urls of cover image\n   * */\n  const coverUrl = process.env.REACT_APP_COVER_IMAGE_URL;\n  const defaultImage = \"https://bit.ly/2TbQXhk\";\n\n  return (\n    <Grid container spacing={2} alignContent=\"flex-start\">\n      {loading\n        ? Array.from(new Array(3)).map((a, index) => (\n            <Grid Grid item md={displayGrid ? 4 : 12} key={`key${index}`}>\n              <Grid\n                container\n                alignItems={displayGrid ? \"flex-start\" : \"center\"}\n                className={\n                  displayGrid ? style.listConteinerGrid : style.listContainer\n                }\n                style={{ padding: \"1rem\" }}\n              >\n                {hasImage ? (\n                  screenSM ? (\n                    <Grid\n                      item\n                      xs={displayGrid ? 12 : 3}\n                      sm={displayGrid ? 12 : 3}\n                      md={displayGrid ? 12 : 2}\n                    >\n                      <Skeleton\n                        animation=\"wave\"\n                        variant=\"rect\"\n                        height={192}\n                        width={displayGrid ? \"90%\" : \"80%\"}\n                        style={{ marginBottom: 6 }}\n                      />\n                    </Grid>\n                  ) : null\n                ) : null}\n                <Grid\n                  item\n                  xs={displayGrid ? 12 : 3}\n                  sm={displayGrid ? 12 : 9}\n                  md={displayGrid ? 12 : 8}\n                >\n                  <Skeleton\n                    animation=\"wave\"\n                    height={20}\n                    width={displayGrid ? \"80%\" : \"50%\"}\n                    style={{ marginBottom: 6 }}\n                  />\n                  <Skeleton animation=\"wave\" height={20} width=\"50%\" />\n\n                  <Skeleton animation=\"wave\" height={40} width=\"30%\" />\n                </Grid>\n              </Grid>\n            </Grid>\n          ))\n        : data?.map((book) => {\n            return (\n              <Grid item md={displayGrid ? 4 : 12} key={`${book.isbn}`}>\n                <Grid\n                  container\n                  alignItems={displayGrid ? \"flex-start\" : \"center\"}\n                  className={\n                    displayGrid ? style.listConteinerGrid : style.listContainer\n                  }\n                >\n                  {hasImage ? (\n                    screenSM ? (\n                      <Grid\n                        item\n                        xs={displayGrid ? 12 : 3}\n                        sm={displayGrid ? 12 : 3}\n                        md={displayGrid ? 12 : 2}\n                      >\n                        <img\n                          height=\"100%\"\n                          width=\"100%\"\n                          className={style.coverImg}\n                          src={\n                            book.isbn !== undefined\n                              ? `${coverUrl}${book.isbn[0]}-M.jpg?default=false`\n                              : defaultImage\n                          }\n                          onError={(e) => (e.target.src = defaultImage)}\n                          alt={book.title}\n                        />\n                      </Grid>\n                    ) : null\n                  ) : null}\n                  <Grid\n                    item\n                    xs={displayGrid ? 12 : 9}\n                    sm={displayGrid ? 12 : 9}\n                    md={displayGrid ? 12 : 10}\n                  >\n                    <Box p={2}>\n                      <h2>{book.title}</h2>\n                      <h5>\n                        {t(\"book_title_label\")} {book.author_name}\n                      </h5>\n                      {hasSubject ? (\n                        <h6>\n                          {\" \"}\n                          {book.subject\n                            ? `${t(\"subject_label\")} ${book.subject}`\n                            : null}\n                        </h6>\n                      ) : null}\n\n                      <h6>\n                        {t(\"published_in\")} {book.first_publish_year}{\" \"}\n                        <span>\n                          {book.language === undefined\n                            ? `${t(\"label_in\")} ${1}`\n                            : `${t(\"label_in\")} ${book.language.length}`}{\" \"}\n                          {t(\"languages_label\")}\n                        </span>\n                      </h6>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Grid>\n            );\n          })}\n    </Grid>\n  );\n};\n\n\nListingBook.propTypes = {\n  data: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  hasSubject: PropTypes.bool,\n  hasImage: PropTypes.bool,\n  displayGrid: PropTypes.bool,\n};\n\nexport default ListingBook;\n","import React from \"react\";\nimport Lottie from 'react-lottie';\nimport animation from '../../assets/animation/reading-clouds.json';\n\n\n\n/**\n * Component with animation to show on empty state\n */\n const EmptyState = () => {\n  \n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animation,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n    return (\n\n        <Lottie options={defaultOptions}\n            width={300}\n         />\n \n  );\n};\n\nexport default EmptyState;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport Icon from '@material-ui/core/Icon';\nimport { loadCSS } from \"fg-loadcss\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\n\n\n/**\n * Component for select the type of view display\n * @param {function} setSelectedDisplay \n */\n\nconst DisplaySelection = ({ setSelectedDisplay }) => {\n const [displayView, setDisplayView] = useState('list');\n    \n \n const onHandleSelection = (event) => {\n    const value = event.target.value === \"grid\" ? true : false;\n    setDisplayView(event.target.value);\n    setSelectedDisplay(value);\n  };\n\n  useEffect(() => {\n    const node = loadCSS(\n      \"https://use.fontawesome.com/releases/v5.12.0/css/all.css\",\n      document.querySelector(\"#font-awesome-css\")\n    );\n\n    return () => {\n      node.parentNode.removeChild(node);\n    };\n  }, []);\n\n  return (\n    <div>\n      \n      <RadioGroup row aria-label=\"position\" name=\"radio\" defaultValue=\"list\">\n        <Radio\n          icon={<Icon className=\"fas fa-list\" />}\n          checkedIcon={<Icon className=\"fas fa-list\" color=\"primary\" />}\n          color=\"default\"\n          value=\"list\"\n          onChange={onHandleSelection}\n          name=\"radio\"\n          inputProps={{ \"aria-label\": \"list\" }}\n          checked={displayView === \"list\"}\n        />\n\n        <Radio\n          icon={<Icon className=\"fas fa-th-large\" />}\n          checkedIcon={<Icon className=\"fas fa-th-large\" color=\"primary\" />}\n          color=\"default\"\n          value=\"grid\"\n          onChange={onHandleSelection}\n          name=\"radio\"\n          inputProps={{ \"aria-label\": \"grid\" }}\n          checked={displayView === \"grid\"}\n        />\n      </RadioGroup>\n    </div>\n  );\n};\n\nDisplaySelection.propTypes = {\n  setSelectedDisplay: PropTypes.func.isRequired,\n};\n\n\n\nexport default DisplaySelection;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  MenuItem,\n  FormControl,\n  TextField,\n  InputLabel,\n \n} from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\n\n/**\n * Filter Menu presentational component.\n * List of options to filter seach.\n * \n * @param {function} selectBookFilter\n * @param {function} onChangeBookFilter\n * @param {boolean} loading  */\n\nconst FilterMenu = ({ selectBookFilter, onChangeBookFilter, loading }) => {\n  const { t } = useTranslation();\n\n  return (\n    <FormControl>\n      <InputLabel id={t(\"filter_label\")} />\n      <TextField\n        select\n        variant=\"outlined\"\n        label={t(\"filter_label\")}\n        id=\"filter\"\n        value={selectBookFilter}\n        onChange={onChangeBookFilter}\n      >\n        <MenuItem value={t(\"filter_label\")} selected disabled>\n          {t(\"filter_label\")}\n        </MenuItem>\n\n        <MenuItem value={t(\"filter_travel\")} disabled={loading}>\n          {t(\"filter_travel\")}\n        </MenuItem>\n        <MenuItem value={t(\"filter_novel\")} disabled={loading}>\n          {t(\"filter_novel\")}\n        </MenuItem>\n        <MenuItem value={t(\"filter_culture\")} disabled={loading}>\n          {t(\"filter_culture\")}\n        </MenuItem>\n      </TextField>\n    </FormControl>\n  );\n};\n\nFilterMenu.propTypes = {\n  selectBookFilter: PropTypes.func,\n  onChangeBookFilter: PropTypes.func,\n  loading: PropTypes.bool,\n};\nexport default FilterMenu;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  InputBase,\n} from \"@material-ui/core\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\n\nconst CustomizedSelect = withStyles((theme) =>\n  createStyles({\n    input: {\n      borderRadius: 4,\n      position: \"relative\",\n      backgroundColor: \"inherit\",\n\n      padding: \"10px 0\",\n      \"&:focus\": {\n        borderBottom: 4,\n        borderColor: \"#80bdff\",\n      },\n    },\n  })\n)(InputBase);\n\n\n\n/**\n * Page limit select presentational component.\n * Selection of the number of itens searched per page\n * \n * @param {function} setSearchLimitPage\n * @param {number} searchLimitPage\n * @param {boolean} loading \n */\n\n\nconst PageLimitSelect = ({ setSearchLimitPage, searchLimitPage, loading }) => {\n  const { t } = useTranslation();\n\n  return (\n    <FormControl>\n      <InputLabel id=\"itensPage\" />\n      <Select\n        variant=\"outlined\"\n        id=\"itensPage\"\n        value={searchLimitPage}\n        onChange={(e) => setSearchLimitPage(e.target.value)}\n        input={<CustomizedSelect />}\n      >\n        <MenuItem value={10} disabled={loading}>\n          {t(\"itensPage_10\")}\n        </MenuItem>\n\n        <MenuItem value={20} disabled={loading}>\n          {t(\"itensPage_20\")}\n        </MenuItem>\n        <MenuItem value={30} disabled={loading}>\n          {t(\"itensPage_30\")}\n        </MenuItem>\n        <MenuItem value={40} disabled={loading}>\n          {t(\"itensPage_40\")}\n        </MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nPageLimitSelect.propTypes = {\n  setSearchLimitPage: PropTypes.func,\n  searchLimitPage: PropTypes.number,\n  loading: PropTypes.bool,\n};\n\nexport default PageLimitSelect;","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./GoodRead.module.css\";\nimport axios from \"axios\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Grid,\n  Hidden,\n  Box\n} from \"@material-ui/core\";\nimport ListingBook from \"../../components/ListingBook\";\nimport EmptyState from \"../../components/EmptyState\";\nimport DisplaySelection from '../../components/DisplaySelection';\nimport FilterMenu from \"../../components/FilterMenu\";\nimport PageLimitSelect from '../../components/PageLimitSelect'\n\n/**\n *  GOOD READ WIDGET\n *  Container component of Good Reads for travel\n *  @param {array} locationInput - it accepts: (city),(city,country) or(latitude,longitude)\n *  @param {number} searchLimit \n *  @param {boolean} hasImage\n *  @param {boolean} hasSubject\n *  @param {boolean} userLimitSearch\n */\n\nconst GoodRead = ({ locationInput, hasImage, hasSubject, searchLimit=20, userLimitSearch=true}) => {\n  const [loading, setLoading] = useState(false);\n  const [searchDestination, setSearchDestination] = useState(\"\");\n  const [totalSearch, setTotalSearch] = useState();\n  const [displayData, setDisplayData] = useState();\n  const [destination, setDestination] = useState();\n  const [offset, setOffset] = useState(0);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState();\n  const [selectBookFilter, setSelectBookFilter] = useState(\"travel\");\n  const [searchLimitPage, setSearchLimitPage] = useState(searchLimit);\n  const [selectedDisplay, setSelectedDisplay] = useState(false);\n  const { t } = useTranslation();\n  const startItensByPage = searchLimitPage * page - searchLimitPage + 1;\n  const endItensByPage =\n    page === totalPage ? totalSearch : searchLimitPage * page;\n\n  /**\n   *  Function to handle page change\n   *  @returns filtered data array to show on page\n   *\n   * @param {array} data initial data array\n   * @param {number} page current page\n   * @param {number} items total items displayed by page\n   *\n   */\n  const handlePagination = (page, searchLimitPage) => {\n    const offset = (page - 1) * searchLimitPage;\n    return setOffset(offset);\n  };\n\n  /**\n   *\n   * @param {object} event\n   */\n  const onChangeBookFilter = (event) => {\n    setSelectBookFilter(event.target.value);\n  };\n\n  /**\n   * Function to handle click to change page\n   * Sets the page state\n   * @param {object} event\n   * @param {number} value\n   */\n  const handleClickPage = (event, value) => {\n    setPage(value);\n    handlePagination(value, searchLimitPage);\n  };\n\n  /**\n   * Http request to get search of books\n   * @param {array} location\n   */\n  const getBooks = (location) => {\n    setLoading(true);\n    setSearchDestination(`${location[0]} ${location[1] ? location[1] : \"\"}`);\n    const city = location?.[0].split(\" \").join(\"+\").toLowerCase();\n    const country = location[1]\n      ? location[1].split(\" \").join(\"+\").toLowerCase()\n      : null;\n\n    axios({\n      method: \"get\",\n      url: `https://openlibrary.org/search.json?q=${\n        country ? `${city}+${country}` : city\n      }+${selectBookFilter}&limit=${searchLimitPage}&offset=${offset}`,\n      crossdomain: true,\n    })\n      .then((response) => {\n        setDisplayData(response.data.docs);\n        setLoading(false);\n        setTotalSearch(response.data.numFound);\n        setTotalPage(Math.ceil(response.data.numFound / searchLimitPage));\n      })\n      .catch((error) => {\n        throw error;\n      });\n  };\n\n  /**\n   * Http request to reverse coordinates into address\n   *\n   * @param {array} coordinates\n   */\n  const reverseGeolocation = (coordinates) => {\n    axios\n      .get(\n        `https://us1.locationiq.com/v1/reverse.php?key=${process.env.REACT_APP_GEO_API_KEY}&lat=${coordinates[0]}&lon=${coordinates[1]}&format=json`\n      )\n      .then((response) => {\n        getBooks([response.data.address.city, response.data.address.country]);\n      })\n      .catch((error) => {\n        throw error;\n      });\n  };\n\n  /**\n   *  Hook receives user input\n   *  if coordinates first reverse geolocation\n   *  if string search for books\n   *\n   */\n  useEffect(() => {\n    if (locationInput === undefined) return;\n    setDestination(locationInput);\n    const isNumber = parseInt(locationInput?.[0]);\n    if (isNumber) reverseGeolocation(locationInput);\n    if (!isNumber) getBooks(locationInput);\n  }, [locationInput]);\n  /**\n   *  Update data to show on page\n   *  when page are change\n   *\n   */\n  useEffect(() => {\n    if (!displayData) return;\n\n    getBooks(destination);\n  }, [offset, selectBookFilter, searchLimitPage]);\n\n  return (\n    <div className={style.main}>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={style.headResults}\n      >\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <Grid item xs={12} sm={6}>\n            {\" \"}\n            <h3>\n              {locationInput\n                ? `${t(\"result_label\")} ${searchDestination}`\n                : null}\n              <span>{totalSearch ? `(${totalSearch})` : null}</span>\n            </h3>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container classes={{ root: style.justifyGrid }}>\n              {displayData ? (\n                <Box mr={2}>\n                  <span>\n                    {\" \"}\n                    {`${startItensByPage}-${endItensByPage} ${t(\n                      \"page_range_itens_of\"\n                    )} ${totalSearch} ${t(\"page_range_books\")} `}{\" \"}\n                  </span>\n                </Box>\n              ) : null}\n              <Hidden xsDown>\n                {displayData && userLimitSearch ? (\n                  <>\n                    <span>{`- ${t(\"itensPage_label\")} `}</span>\n                    <PageLimitSelect\n                      setSearchLimitPage={setSearchLimitPage}\n                      searchLimitPage={searchLimitPage}\n                      loading={loading}\n                    />\n                  </>\n                ) : null}\n              </Hidden>\n              {locationInput ? (\n                <>\n                  <FilterMenu\n                    selectBookFilter={selectBookFilter}\n                    onChangeBookFilter={onChangeBookFilter}\n                    loading={loading}\n                  />\n                  <Hidden xsDown>\n                    <DisplaySelection setSelectedDisplay={setSelectedDisplay} />\n                  </Hidden>\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Box>\n        {locationInput ? (\n          <ListingBook\n            data={displayData}\n            loading={loading}\n            hasImage={hasImage}\n            hasSubject={hasSubject}\n            displayGrid={selectedDisplay}\n          />\n        ) : (\n          <EmptyState />\n        )}\n      </Box>\n      <div className={style.wrapPagination}>\n        {displayData ? (\n          <Pagination\n            count={totalPage}\n            page={page}\n            onChange={handleClickPage}\n            className={style.pagination}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\n\nGoodRead.propTypes = {\n  locationInput: PropTypes.array,\n  hasImage: PropTypes.bool ,\n  hasSubject: PropTypes.bool, \n  searchLimit: PropTypes.number, \n  userLimitSearch: PropTypes.bool,\n};\n\nexport default GoodRead;\n","import React, {useState} from 'react';\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useTranslation } from \"react-i18next\";\n\n\n/**\n * Component for Language selection of the interface\n */\n\nconst LanguadeSelection = () => {\n  const { t, i18n } = useTranslation();\n  const [languageSelect, setLanguageSelect] = useState(\"en\");\n\n\n  const handleChangeLang = (event) => {\n    setLanguageSelect(event.target.value);\n    i18n.changeLanguage(event.target.value);\n  };\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" >\n        <Select\n          labelId=\"language\"\n          id=\"language\"\n          value={languageSelect}\n          onChange={handleChangeLang}\n        >\n          <MenuItem value=\"en\">{t(\"label_english\")}</MenuItem>\n          <MenuItem value=\"pt\">{t(\"label_portuguese\")}</MenuItem>\n          <MenuItem value=\"fr\">{t(\"label_french\")}</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default LanguadeSelection;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport style from \"./App.module.css\";\nimport { Container } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchButton from '@material-ui/icons/Search';\n  \nimport GoodRead from \"./containers/GoodRead\";\nimport LanguadeSelection from \"./components/LanguageSelection\";\n\n/**\n * App View is a simple page structure with search bar,\n * language selection and a component that shows result of the book search\n */\n\nconst App = () => {\n  const [userInput, setUserInput] = useState(\"Amsterdam\");\n  const [location, setLocation] = useState();\n\n\n  /**\n   *  Function to handle change user input\n   * @param {} e \n   */\n  const onChangeInput = (e) => {\n    setUserInput(e.target.value);\n  };\n\n\n/**\n *  Function handle submit user's input\n */\n  const onSubmit = () => {\n    const value = userInput.split(\",\");\n    setLocation(value);\n  };\n\n\n\n  return (\n    <Container>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={[style.mainContainer, style.py3].join(\" \")}\n      >\n        <div>\n          <h1 className={style.logo}>GoodReads</h1>\n          <h4 className={style.forTravel}>----- FOR TRAVEL -----</h4>\n        </div>\n\n        <div className={style.inputField}>\n          <form>\n            <TextField\n              id=\"userInput\"\n              onChange={onChangeInput}\n              value={userInput}\n              variant=\"outlined\"\n            />\n            <IconButton aria-label=\"button\" onClick={onSubmit}>\n              <SearchButton />\n            </IconButton>\n          </form>\n        </div>\n        <div classes={{ root: style.formControl }}>\n          <LanguadeSelection />\n        </div>\n      </Grid>\n      {/* **** GOOD READS FOR TRAVEL COMPONENT  **** */}\n      <GoodRead locationInput={location} />\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n\n/**\n *  File with translations ids of i18next internalization\n */\n\nconst resources = {\n  en: {\n    translation: {\n      result_label: \"Results for\",\n      book_title_label: \"by\",\n      published_in: \"Published in\",\n      label_in: \"in\",\n      languages_label: \"Languages\",\n      subject_label: \"Subject:\",\n      filter_label: \"Filter\",\n      filter_travel: \"travel\",\n      filter_novel: \"novel\",\n      filter_culture: \"culture\",\n      label_english: \"English\",\n      label_french: \"Français\",\n      label_portuguese: \"Português\",\n      itensPage_label: \"Itens By Page\",\n      itensPage_10: \"10\",\n      itensPage_20: \"20\",\n      itensPage_30: \"30\",\n      itensPage_40: \"40\",\n      page_range_itens_of: \"itens of\",\n      page_range_books: \"books\",\n     \n\n    },\n  },\n  pt: {\n    translation: {\n      result_label: \"Resultados para\",\n      book_title_label: \"por\",\n      published_in: \"Publicado em\",\n      label_in: \"em\",\n      languages_label: \"Idiomas\",\n      subject_label: \"Assunto:\",\n      filter_label: \"Filtrar por\",\n      filter_travel: \"travel\",\n      filter_novel: \"novel\",\n      filter_culture: \"cultura\",\n      label_english: \"English\",\n      label_french: \"Français\",\n      label_portuguese: \"Português\",\n    },\n  },\n\n  fr: {\n    translation: {\n      result_label: \"Résultats pour\",\n      book_title_label: \"pour\",\n      published_in: \"Publié dans\",\n      label_in: \"dans\",\n      languages_label: \"Langues\",\n      subject_label: \"Sujet:\",\n      filter_label: \"Filtre par\",\n      filter_travel: \"voyage\",\n      filter_novel: \"roman\",\n      filter_culture: \"culture\",\n      label_english: \"English\",\n      label_french: \"Français\",\n      label_portuguese: \"Português\",\n    },\n    /* insert prop for new lang */\n  },\n};\n\n/**\n * Setup of i18next multi language \n */\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    lng: 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, \n    },\n  });\n\nexport default i18n;","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport \"./i18n\";\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={null}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"App_mainContainer__2o5r7\",\"logo\":\"App_logo__1ItuU\",\"py3\":\"App_py3__1LEK1\",\"forTravel\":\"App_forTravel__1l9XQ\",\"formControl\":\"App_formControl__du-Cu\",\"inputField\":\"App_inputField__21edn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"GoodRead_main__2lVDI\",\"headResults\":\"GoodRead_headResults__1RQVg\",\"wrapPagination\":\"GoodRead_wrapPagination__whV1e\",\"pagination\":\"GoodRead_pagination__1hHAo\",\"justifyGrid\":\"GoodRead_justifyGrid__3Pvma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"ListingBook_listContainer__eajGR\",\"listConteinerGrid\":\"ListingBook_listConteinerGrid__15eGP\",\"coverImg\":\"ListingBook_coverImg__2VGmz\"};"],"sourceRoot":""}